// Stack operations
OP(LIT   , 0x00, PRIM)
OP(DUP   , 0x01, PRIM)
OP(DROP  , 0x02, PRIM)
OP(SWAP  , 0x03, PRIM)
OP(OVER  , 0x04, PRIM)

// Arithmetic operations
OP(ADD   , 0x10, PRIM)
OP(SUB   , 0x11, PRIM)
OP(MUL   , 0x12, PRIM)
OP(DIV   , 0x13, PRIM)
OP(MOD   , 0x14, PRIM)

// Comparison (signed, Forth-style true = -1)
OP(EQ    , 0x20, PRIM)
OP(NE    , 0x21, PRIM)
OP(LT    , 0x22, PRIM)
OP(LE    , 0x23, PRIM)
OP(GT    , 0x24, PRIM)
OP(GE    , 0x25, PRIM)

// Logical / bitwise operations
OP(AND   , 0x28, PRIM)
OP(OR    , 0x29, PRIM)
OP(XOR   , 0x2A, PRIM)
OP(INVERT, 0x2B, PRIM)

// Memory access (32-bit, little-endian)
OP(LOAD  , 0x30, PRIM)
OP(STORE , 0x31, PRIM)

// Control flow (compiled by Front)
OP(JMP   , 0x40, CTRL)
OP(JZ    , 0x41, CTRL)
OP(JNZ   , 0x42, CTRL)

// Call / return
OP(CALL  , 0x50, CTRL)
OP(RET   , 0x51, CTRL)

// System hook (reserved; optional sugar like EMIT/KEY/millis)
OP(SYS   , 0x60, PRIM_SYS)
